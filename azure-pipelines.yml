trigger:
  branches:
    include:
      - master

variables:
  - name: location
    value: eastus
  - name: resource-group
    value: rg-medical-cost-prediction
  - name: containerapp-environment
    value: env-medical-cost-prediction
  - name: subscription
    value: 'Data Science IAC'

stages:

  # Run Test on module
  - stage: TestAndBuildModule
    jobs:

      # Test Module Performance
      - job: TestModule
        displayName: Validate module accuracy
        steps:

          - task: UsePythonVersion@0
            displayName: Set python version
            inputs:
              versionSpec: '3.10'
              addToPath: true
              architecture: 'x64'

          - task: Bash@3
            displayName: Install python packages
            inputs:
              targetType: 'inline'
              script: |
                pip install -r requirements.txt
              workingDirectory: '$(System.DefaultWorkingDirectory)/'

          - task: Bash@3
            displayName: Download Dataset
            inputs:
              targetType: 'inline'
              script: |
                wget https://publicimages0.blob.core.windows.net/datasets/Tabular/modecal_cost/medical_cost.zip
                mv medical_cost.zip ../data
              workingDirectory: '$(System.DefaultWorkingDirectory)/notebooks'

          - task: PythonScript@0
            displayName: Extract dataset from zip file
            inputs:
              scriptSource: 'inline'
              script: |
                import zipfile
                data=zipfile.ZipFile("../data/medical_cost.zip")
                data.extractall("../data/")
                data.close()
              workingDirectory: '$(System.DefaultWorkingDirectory)/notebooks'

          - task: Bash@3
            continueOnError: false
            displayName: Run unittest
            inputs:
              targetType: 'inline'
              script: |
                pytest -v -s
              workingDirectory: '$(System.DefaultWorkingDirectory)/model'

      # Train Module After Test Passed
      - job: BuildModel
        dependsOn: TestAndBuildModule
        steps:
          
          - task: UsePythonVersion@0
            displayName: Set python version
            inputs:
              versionSpec: '3.10'
              addToPath: true
              architecture: 'x64'

          - task: Bash@3
            displayName: Install python packages
            inputs:
              targetType: 'inline'
              script: |
                pip install -r requirements.txt
              workingDirectory: '$(System.DefaultWorkingDirectory)/'

          - task: Bash@3
            displayName: Download Dataset
            inputs:
              targetType: 'inline'
              script: |
                wget https://publicimages0.blob.core.windows.net/datasets/Tabular/modecal_cost/medical_cost.zip
                mv medical_cost.zip ../data
              workingDirectory: '$(System.DefaultWorkingDirectory)/notebooks'

          - task: PythonScript@0
            displayName: Extract dataset from zip file
            inputs:
              scriptSource: 'inline'
              script: |
                import zipfile
                data=zipfile.ZipFile("../data/medical_cost.zip")
                data.extractall("../data/")
                data.close()
              workingDirectory: '$(System.DefaultWorkingDirectory)/notebooks'

          - task: Bash@3
            displayName: Train model
            inputs:
              targetType: 'inline'
              script: |
                mkdir module
                python train.py
                mv model.pkl module
              workingDirectory: '$(System.DefaultWorkingDirectory)/model'

          - task: PublishBuildArtifacts@1
            displayName: publish build model as an artifact
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/model/module'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  #Deploy Cloud Infrastructure
  - stage: InfrastructureDeployment
    dependsOn: TestAndBuildModule
    jobs:
      - job: DeployResources
        steps:
                   
          - task: AzureCLI@2
            displayName: create resource group
            inputs:
              azureSubscription: $(subscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: az group create --location $(location) --name $(resource-group)
          
          - task: AzureCLI@2
            displayName: create containerapp environment
            inputs:
              azureSubscription: $(subscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az containerapp env create -n $(containerapp-environment) -g $(resource-group) \
                --location $(location)
      